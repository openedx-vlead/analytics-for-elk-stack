* Introduction
  This document describes the steps to run elasticsearch service behind =nginx=
  on VM using vagrant
* Steps to run =elasticsearch= service behind =nginx= on port =80=
- [[https://github.com/vlead/vlead-templates/blob/develop/vagrant-boxes/export-vagrant-box.org#steps-to-create-vm-using-vagrant][Create VM]] using vagrant 
- Update VM
#+BEGIN_EXAMPLE
sudo apt-get update -y
#+END_EXAMPLE
- Install the software-properties-common Package
#+BEGIN_EXAMPLE
sudo apt-get install software-properties-common python-software-properties -y
#+END_EXAMPLE
- To install =java8=, run
#+BEGIN_EXAMPLE
sudo apt-add-repository ppa:webupd8team/java -y
sudo apt-get update -y
echo 'oracle-java8-installer shared/accepted-oracle-license-v1-1 select true' | sudo debconf-set-selections
sudo apt-get install oracle-java8-installer -y
#+END_EXAMPLE
- Install elasticsearch =v1.7.2=
#+BEGIN_EXAMPLE
wget https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.7.2.deb && dpkg -i elasticsearch-1.7.2.deb
#+END_EXAMPLE

- Start Elasticsearch
#+BEGIN_EXAMPLE
sudo service elasticsearch start
#+END_EXAMPLE
- Install nginx web server
#+BEGIN_EXAMPLE
sudo apt-get install nginx -y
#+END_EXAMPLE
- Start nginx
#+BEGIN_EXAMPLE
sudo service nginx start
#+END_EXAMPLE
- Routing the requests through nginx
  + First lets disable Elasticsearch from receiving external requests. In the
    elasticsearch server, open the file /etc/elasticsearch/elasticsearch.yml
    for editting. Comment out the config network.bind_host and
    network.publish_host.
#+BEGIN_EXAMPLE
#network.bind_host: #some_value
#network.publish_host: #some_other_value 
network.host: localhost
#+END_EXAMPLE
- Check by restarting service
#+BEGIN_EXAMPLE
sudo service elasticsearch restart
#+END_EXAMPLE
- Run elasticsearch behind nginx
  + To accomplish that, we need to create a file
    /etc/nginx/sites-available/elasticsearch with the following content.
#+BEGIN_EXAMPLE
server {
    listen 80;
    server_name localhost;
    location / {
    limit_except GET {
      auth_basic           "Login required";
      auth_basic_user_file /etc/nginx/.htpasswd;
    } 
        rewrite ^/(.*) /$1 break;
        proxy_ignore_client_abort on;
        proxy_pass http://localhost:9200;
        proxy_redirect http://localhost:9200 http://localhost/;
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  Host $http_host;
    }
}

#+END_EXAMPLE
- Create symbolic link to nginx virtual conf file =elasticsearch=
#+BEGIN_EXAMPLE
sudo ln /etc/nginx/sites-available/elasticsearch /etc/nginx/sites-enabled/
#+END_EXAMPLE
- Remove =default= file from =nginx=
#+BEGIN_EXAMPLE
rm /etc/nginx/sites-enabled/default
#+END_EXAMPLE
- Reload & restart nginx
#+BEGIN_EXAMPLE
sudo service nginx reload
sudo service nginx restart
#+END_EXAMPLE
- Run =nginx= and =elasticsearch= on boot time
#+BEGIN_EXAMPLE
sudo update-rc.d nginx defaults
sudo update-rc.d elasticsearch defaults
#+END_EXAMPLE
- Access elasticsearch on browser
#+BEGIN_EXAMPLE
firefox http://localhost
#+END_EXAMPLE
